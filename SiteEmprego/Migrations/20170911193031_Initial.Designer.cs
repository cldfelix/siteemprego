// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SiteEmprego.Models;
using System;

namespace SiteEmprego.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20170911193031_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteEmprego.Models.Candidatura", b =>
                {
                    b.Property<long>("Idcandidatura")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CandidaturaAtiva");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<long>("CurriculoId");

                    b.Property<long>("UsuarioIdUsuario");

                    b.Property<long>("VagaIdVaga");

                    b.HasKey("Idcandidatura");

                    b.HasIndex("CurriculoId");

                    b.HasIndex("UsuarioIdUsuario");

                    b.HasIndex("VagaIdVaga");

                    b.ToTable("Candidatura");
                });

            modelBuilder.Entity("SiteEmprego.Models.Curriculo", b =>
                {
                    b.Property<long>("CurriculoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Descricao");

                    b.Property<string>("Estado");

                    b.Property<int>("QdtEnviados");

                    b.Property<float>("Salario");

                    b.Property<string>("Titulo");

                    b.Property<long?>("UsuarioIdUsuario");

                    b.HasKey("CurriculoId");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Curriculo");
                });

            modelBuilder.Entity("SiteEmprego.Models.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<bool>("UsuarioAtivo");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SiteEmprego.Models.Vaga", b =>
                {
                    b.Property<long>("IdVaga")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<int>("QtdCandidados");

                    b.Property<float>("Salario");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<long?>("UsuarioIdUsuario");

                    b.Property<bool>("VagaAtiva");

                    b.HasKey("IdVaga");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Vaga");
                });

            modelBuilder.Entity("SiteEmprego.Models.Candidatura", b =>
                {
                    b.HasOne("SiteEmprego.Models.Curriculo", "Curriculo")
                        .WithMany("Candidaturas")
                        .HasForeignKey("CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SiteEmprego.Models.Usuario", "Usuario")
                        .WithMany("Candidaturas")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SiteEmprego.Models.Vaga", "Vaga")
                        .WithMany("Candidaturas")
                        .HasForeignKey("VagaIdVaga")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SiteEmprego.Models.Curriculo", b =>
                {
                    b.HasOne("SiteEmprego.Models.Usuario", "Usuario")
                        .WithMany("Curriculos")
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("SiteEmprego.Models.Vaga", b =>
                {
                    b.HasOne("SiteEmprego.Models.Usuario", "Usuario")
                        .WithMany("Vagas")
                        .HasForeignKey("UsuarioIdUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
